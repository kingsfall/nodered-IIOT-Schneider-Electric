[{"id":"e6c191f0.3ba34","type":"subflow","name":"HTTPS to MachineAdvisor V1.2 (4)","info":"This Node send a Message by HTTPS to a url.\nIt's dedicated to send data to EcoStruxure Machine Advisor.\n\nYou need to provide through the input flow following values:\n - msg.CustomHeader2 (type String)\n - msg.prefix (type String)\n - msg.Server (type String)\n - msg.proxy (type String)\n - msg.payload (JSON String either Format Tango or Format Charlie)\n\n","category":"Machine Advisor","in":[{"x":60,"y":80,"wires":[{"id":"3fbbbfd5.d0627"}]}],"out":[{"x":1020,"y":240,"wires":[{"id":"7f7e7d34.46a654","port":0}]},{"x":520,"y":360,"wires":[{"id":"3aa9567c.18584a","port":0}]}]},{"id":"b7bdabbe.57e978","type":"debug","z":"e6c191f0.3ba34","name":"Debug","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":770,"y":120,"wires":[]},{"id":"590db6ac.a1b7b8","type":"debug","z":"e6c191f0.3ba34","name":"RC","active":false,"console":"false","complete":"payload","x":1050,"y":200,"wires":[]},{"id":"4cd0bb45.74d174","type":"debug","z":"e6c191f0.3ba34","name":"STDERR","active":false,"console":"false","complete":"true","x":780,"y":160,"wires":[]},{"id":"aa4da77f.76f328","type":"comment","z":"e6c191f0.3ba34","name":"HTTPS Uplink with StoreAndForward","info":"","x":810,"y":40,"wires":[]},{"id":"7f7e7d34.46a654","type":"function","z":"e6c191f0.3ba34","name":"sendConnectionStatus","func":"if(msg.payload.code === 0){\n    node.status({fill:\"green\",shape:\"dot\",text:\"Connected\"});\n}else if(msg.payload.code === 5){\n    node.status({fill:\"red\",shape:\"ring\",text:\"Error RC:\" + msg.payload.code + \" (wrong proxy)\"});\n}else {\n    node.status({fill:\"red\",shape:\"ring\",text:\"Error RC:\" + msg.payload.code});\n}\nreturn msg;","outputs":1,"noerr":0,"x":820,"y":220,"wires":[["590db6ac.a1b7b8"]]},{"id":"3fbbbfd5.d0627","type":"json","z":"e6c191f0.3ba34","name":"jsonify","pretty":false,"x":210,"y":60,"wires":[["38bb6af1.c45586"]]},{"id":"38bb6af1.c45586","type":"function","z":"e6c191f0.3ba34","name":"prepare Monitor Configuration","func":"if(msg.Server === undefined){\n    node.status({fill:\"red\",shape:\"dot\",text:\"msg.Server is missing in the flow\"});\n    return;\n} else if(msg.CustomHeader2 === undefined){\n    node.status({fill:\"red\",shape:\"dot\",text:\"msg.CustomHeader2 is missing in the flow\"});\n    return;\n} else if(msg.prefix === undefined){\n    node.status({fill:\"red\",shape:\"dot\",text:\"msg.prefix is missing in the flow\"});\n    return;\n} else if(msg.proxy === undefined){\n    node.status({fill:\"red\",shape:\"dot\",text:\"msg.proxy is missing in the flow\"});\n    return;\n} else if(msg.Server === \"\" || msg.CustomHeader2 === \"\" || \n            msg.Server === \"https://cnm-ih-na.azure-devices.net/devices/xxx\" || \n            msg.CustomHeader2 === \"Authorization;SharedAccessSignature sr=cnm-ih-na.azure-devices.netxxx\") {\n    node.status({fill:\"red\",shape:\"dot\",text:\"Please set Monitor Data\"});\n    return;\n}\nmsg.method = \"POST\";\nmsg.url = msg.Server;\nmsg.headers = {\n    \"Authorization\": msg.CustomHeader2,\n\t\"Content-Type\": \"application/json\"\n};\nmsg.headers.Authorization=msg.headers.Authorization.replace(/^.*SharedAccessSignature/,\"SharedAccessSignature\");\nmsg.send_body=msg.payload;\n//node.status({fill:\"green\",shape:\"dot\",text:\"OK\"});\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":60,"wires":[["1ed4fb11.58e1c5"]]},{"id":"3aa9567c.18584a","type":"status","z":"e6c191f0.3ba34","name":"","scope":["1ed4fb11.58e1c5","38bb6af1.c45586","7f7e7d34.46a654"],"x":360,"y":360,"wires":[[]]},{"id":"8fb66035.2f547","type":"exec","z":"e6c191f0.3ba34","command":"curl","addpay":true,"append":"","useSpawn":"false","timer":"30","oldrc":false,"name":"","x":610,"y":200,"wires":[["b7bdabbe.57e978"],["4cd0bb45.74d174"],["1ed4fb11.58e1c5","7f7e7d34.46a654"]]},{"id":"19590b37.20ee65","type":"function","z":"e6c191f0.3ba34","name":"curl args","func":"var p=[];\np.push( '--retry', '0' );\np.push( '-k' );\n\n//***** Proxy Setting *****\nif(msg.proxy !== undefined && msg.proxy.startsWith(\"http\")){\n    p.push( '--proxy' );\n    p.push( msg.proxy );\n}\n//**************************\n\nfor (var k in msg.headers ) {\n    p.push( \"-H\", \"\\\"\" + k + \": \" + msg.headers[k] + \"\\\"\" );\n}\np.push( msg.url );\nvar v = JSON.stringify( msg.payload );\np.push( '-d', v );\nmsg.payload=p.join(\" \");\nreturn msg;","outputs":1,"noerr":0,"x":460,"y":200,"wires":[["8fb66035.2f547"]]},{"id":"1ed4fb11.58e1c5","type":"function","z":"e6c191f0.3ba34","name":"Buffer","func":"var buffer = flow.get(\"UPLINK-BUFFER\");\nvar conStatus = flow.get(\"CON-STATUS\");\nvar msgInTube = flow.get(\"MSG-IN-TUBE\");\nvar isNewMsg = false;\n\nif ((typeof msgInTube) !== \"boolean\") {\n    msgInTube = false;\n}\n\nif(msg.deleteBuffer !== undefined) {    // delete Buffer\n    buffer = [];\n    isNewMsg = false;\n    msgInTube = false;\n} else if(msg.payload.code !== undefined) { // detect RC\n    if(msg.payload.code === 0){\n        conStatus = true;\n        msgInTube = false;\n        buffer.shift();\n        // take the next message if buffer is not emty\n        if(buffer.length > 0){\n            isNewMsg = true;\n            msgInTube = true;\n            msg = JSON.parse(JSON.stringify(buffer[0]));\n        }\n    } else {\n        conStatus = false;\n        msgInTube = false;\n        if(buffer.length > 500){\n            buffer.shift();\n        }\n    }\n} else if(msg.url !== undefined){   // detect new message\n    if(buffer === undefined){\n        buffer = [];\n    }\n    buffer.push(JSON.parse(JSON.stringify(msg)));\n    // take always the first message\n    if(msgInTube === false){\n        isNewMsg = true;\n        msgInTube = true;\n        msg = JSON.parse(JSON.stringify(buffer[0]));\n    } else {\n        if((msg.timestampEpoc) > buffer[0].timestampEpoc + 1000){\n            isNewMsg = true;\n        }\n    }\n} else {\n    return;\n}\n\nflow.set(\"UPLINK-BUFFER\", buffer);\nflow.set(\"CON-STATUS\", conStatus);\nflow.set(\"MSG-IN-TUBE\", msgInTube);\nnode.status({fill:\"yellow\",shape:\"dot\",text:\"Buffer Size: \" + buffer.length});\n\nif(isNewMsg){\n    return msg;\n}else {\n    return;\n}\n","outputs":1,"noerr":0,"x":330,"y":120,"wires":[["19590b37.20ee65"]]},{"id":"c87aeda0.25c2","type":"comment","z":"e6c191f0.3ba34","name":"V1.2","info":"V1.0 2019.03.08\n    - StoreAndForward not persistend implemented.\nV1.1 2019.03.08\n    - delete Buffer with msg.deleteBuffer\n    - take the Proxy from msg.proxy\n    - adaptation for changes in NodeRed V0.20.x\nV1.2 2019.03.28\n    - Bugfix: When a new message arrive while another is in process.\n    - Merged together in one Subflow.\n    - Added status message for Buffer Size","x":130,"y":220,"wires":[]},{"id":"1e867eb9.dd0781","type":"tab","label":"ModbusTCP","disabled":false,"info":""},{"id":"e5ff5ef3.baf23","type":"function","z":"1e867eb9.dd0781","name":"Create Tango Format","func":"var data=[];\nvar counter = 0;\nif(msg.prefix === undefined){\n    msg.prefix = \"noPrefix\";\n}\n\nif(Array.isArray(msg.values)){\n    for (var k in msg.values ) {\n        data.push(msg.values[k]);\n        counter++;\n    }\n} else if(Array.isArray(msg.payload)){\n    for (var k in msg.payload ) {\n        data.push(msg.payload[k]);\n        counter++;    \n    } \n} else{\n    return;\n}\n\n\nmsg.payload = {\n        \"ID\": msg.prefix,\n        \"TS\": msg.timestamp,\n        \"ST\":msg.input.payload.address,\n        \"VR\": data\n};\n\nvar stateMsg = counter + \" Data found\"\nnode.status({fill:\"green\",shape:\"dot\",text:stateMsg});\n\nreturn msg;","outputs":1,"noerr":0,"x":520,"y":300,"wires":[[]]},{"id":"ea683f26.ddbd7","type":"inject","z":"1e867eb9.dd0781","name":"","topic":"","payload":"","payloadType":"date","repeat":"60","crontab":"","once":false,"onceDelay":"","x":110,"y":100,"wires":[["23eb35df.6d987a"]]},{"id":"8a9c5df8.838fa","type":"comment","z":"1e867eb9.dd0781","name":"MODBUS","info":"","x":100,"y":60,"wires":[]},{"id":"5b86bc77.8a5724","type":"function","z":"1e867eb9.dd0781","name":"ConvertModbusREAL","func":"var data=[];\nif(Array.isArray(msg.values)){\n    for ( var i = 0; i < msg.values.length; i++) {\n        data.push(Word_to_Real(msg.values[i], msg.values[++i]));\n    }\n} else if(Array.isArray(msg.payload)){\n    for ( var i = 0; i < msg.payload.length; i++) {\n        data.push(Word_to_Real(msg.payload[i], msg.payload[++i]));\n    }\n} else{\n    return;\n}\n\nmsg.values=data;\nreturn msg;\n\n\n/***********************************************/\nfunction Uint_to_Int(word){\n    if (word > 32768){\n    word=word-65536;\n    return word;\n    } \n    else {\n    return word;\n    }\n}\n/**************************************************/\nfunction Word_to_Udint(low, high){\n    return (high*65536+low);\n}\n/**************************************************/\nfunction Word_to_Dint(low ,high){\n    var scratch = high*65536+low;\n    if (scratch >2147483647) {\n     return (scratch-4294967296);\n    } \n    else {\n    return scratch;\n    }    \n }\n/**************************************************/\nfunction Word_to_Real(low, high){\n  var fpnum=low|(high<<16);\n  var negative=(fpnum>>31)&1;\n  var exponent=(fpnum>>23)&0xFF;\n  var mantissa=(fpnum&0x7FFFFF);\n  if(exponent==255){\n   if(mantissa !== 0)return Number.NaN;\n   return (negative) ? Number.NEGATIVE_INFINITY :\n         Number.POSITIVE_INFINITY;\n  }\n  if(exponent === 0)exponent++;\n  else mantissa|=0x800000;\n  exponent-=127;\n  var ret=(mantissa*1.0/0x800000)*Math.pow(2,exponent);\n  if(negative)ret=-ret;\n  return ret;\n}","outputs":1,"noerr":0,"x":140,"y":520,"wires":[[]]},{"id":"4e8ca33f.ddc7ac","type":"function","z":"1e867eb9.dd0781","name":"ConvertModbusINT","func":"var data=[];\nif(Array.isArray(msg.values)){\n    for ( var i = 0; i < msg.values.length; i++) {\n        data.push(Uint_to_Int(msg.values[i]));\n    }\n} else if(Array.isArray(msg.payload)){\n    for ( var i = 0; i < msg.payload.length; i++) {\n        data.push(Uint_to_Int(msg.payload[i]));\n    }\n} else{\n    return;\n}\n\n\nmsg.values=data;\nreturn msg;\n\n\n/***********************************************/\nfunction Uint_to_Int(word){\n    if (word > 32768){\n    word=word-65536;\n    return word;\n    } \n    else {\n    return word;\n    }\n}\n/**************************************************/\nfunction Word_to_Udint(low, high){\n    return (high*65536+low);\n}\n/**************************************************/\nfunction Word_to_Dint(low ,high){\n    var scratch = high*65536+low;\n    if (scratch >2147483647) {\n     return (scratch-4294967296);\n    } \n    else {\n    return scratch;\n    }    \n }\n/**************************************************/\nfunction Word_to_Real(low, high){\n  var fpnum=low|(high<<16);\n  var negative=(fpnum>>31)&1;\n  var exponent=(fpnum>>23)&0xFF;\n  var mantissa=(fpnum&0x7FFFFF);\n  if(exponent==255){\n   if(mantissa !== 0)return Number.NaN;\n   return (negative) ? Number.NEGATIVE_INFINITY :\n         Number.POSITIVE_INFINITY;\n  }\n  if(exponent === 0)exponent++;\n  else mantissa|=0x800000;\n  exponent-=127;\n  var ret=(mantissa*1.0/0x800000)*Math.pow(2,exponent);\n  if(negative)ret=-ret;\n  return ret;\n}","outputs":1,"noerr":0,"x":130,"y":400,"wires":[[]]},{"id":"4826b2bb.11280c","type":"function","z":"1e867eb9.dd0781","name":"ConvertModbusUDINT","func":"var data=[];\nif(Array.isArray(msg.values)){\n    for ( var i = 0; i < msg.values.length; i++) {\n        data.push(Word_to_Udint(msg.values[i], msg.values[++i]));\n    }\n} else if(Array.isArray(msg.payload)){\n    for ( var i = 0; i < msg.payload.length; i++) {\n        data.push(Word_to_Udint(msg.payload[i], msg.payload[++i]));\n    }\n} else{\n    return;\n}\n\nmsg.values=data;\nreturn msg;\n\n\n/***********************************************/\nfunction Uint_to_Int(word){\n    if (word > 32768){\n    word=word-65536;\n    return word;\n    } \n    else {\n    return word;\n    }\n}\n/**************************************************/\nfunction Word_to_Udint(low, high){\n    return (high*65536+low);\n}\n/**************************************************/\nfunction Word_to_Dint(low ,high){\n    var scratch = high*65536+low;\n    if (scratch >2147483647) {\n     return (scratch-4294967296);\n    } \n    else {\n    return scratch;\n    }    \n }\n/**************************************************/\nfunction Word_to_Real(low, high){\n  var fpnum=low|(high<<16);\n  var negative=(fpnum>>31)&1;\n  var exponent=(fpnum>>23)&0xFF;\n  var mantissa=(fpnum&0x7FFFFF);\n  if(exponent==255){\n   if(mantissa !== 0)return Number.NaN;\n   return (negative) ? Number.NEGATIVE_INFINITY :\n         Number.POSITIVE_INFINITY;\n  }\n  if(exponent === 0)exponent++;\n  else mantissa|=0x800000;\n  exponent-=127;\n  var ret=(mantissa*1.0/0x800000)*Math.pow(2,exponent);\n  if(negative)ret=-ret;\n  return ret;\n}","outputs":1,"noerr":0,"x":140,"y":440,"wires":[[]]},{"id":"a5227947.6bb488","type":"function","z":"1e867eb9.dd0781","name":"ConvertModbusDINT","func":"var data=[];\nif(Array.isArray(msg.values)){\n    for ( var i = 0; i < msg.values.length; i++) {\n        data.push(Word_to_Dint(msg.values[i], msg.values[++i]));\n    }\n} else if(Array.isArray(msg.payload)){\n    for ( var i = 0; i < msg.payload.length; i++) {\n        data.push(Word_to_Dint(msg.payload[i], msg.payload[++i]));\n    }\n} else{\n    return;\n}\n\nmsg.values=data;\nreturn msg;\n\n\n/***********************************************/\nfunction Uint_to_Int(word){\n    if (word > 32768){\n    word=word-65536;\n    return word;\n    } \n    else {\n    return word;\n    }\n}\n/**************************************************/\nfunction Word_to_Udint(low, high){\n    return (high*65536+low);\n}\n/**************************************************/\nfunction Word_to_Dint(low ,high){\n    var scratch = high*65536+low;\n    if (scratch >2147483647) {\n     return (scratch-4294967296);\n    } \n    else {\n    return scratch;\n    }    \n }\n/**************************************************/\nfunction Word_to_Real(low, high){\n  var fpnum=low|(high<<16);\n  var negative=(fpnum>>31)&1;\n  var exponent=(fpnum>>23)&0xFF;\n  var mantissa=(fpnum&0x7FFFFF);\n  if(exponent==255){\n   if(mantissa !== 0)return Number.NaN;\n   return (negative) ? Number.NEGATIVE_INFINITY :\n         Number.POSITIVE_INFINITY;\n  }\n  if(exponent === 0)exponent++;\n  else mantissa|=0x800000;\n  exponent-=127;\n  var ret=(mantissa*1.0/0x800000)*Math.pow(2,exponent);\n  if(negative)ret=-ret;\n  return ret;\n}","outputs":1,"noerr":0,"x":140,"y":480,"wires":[[]]},{"id":"6981eb09.a12ac4","type":"comment","z":"1e867eb9.dd0781","name":"Use one of this nodes between ModbusTCP Request and Create Tango Format to Convert the Values","info":"","x":390,"y":360,"wires":[]},{"id":"23eb35df.6d987a","type":"function","z":"1e867eb9.dd0781","name":"choose timestamp","func":"// ***** UTC Timestamp\nvar date = new Date(msg.payload);\n// ***** Local Timestamp **** Uncomment the next line for Local Timestamp \n// But take in account that Machine Advisor expect UTC time.\n//date = new Date(date.getTime() - (date.getTimezoneOffset() * 60000));\n\n// **** don't touch the next part\nmsg.timestamp=date.toISOString().replace(/(....)-(..)-(..)T([^.]+)\\..*/, \"$3/$2/$1 $4\");\nmsg.timestampEpoc = date.getTime();\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":100,"wires":[["7aeb24c3.214b1c"]]},{"id":"90445901.15f5e8","type":"comment","z":"1e867eb9.dd0781","name":"V1.5: double-click for Release Node","info":"V1.5  Date: 28.03.2019 by A. Eirich\n  - added delete Buffer inject\n  - new Version of HTTPS to Machine Advisor V1.2\n  - added more status information\nV1.4  Date: 22.03.2019 by A. Eirich\n  - changed Flow Structure\n  - added proxy to set Monitor Data node\n  - improved Create Tango Format\nV1.3  Date: 15.03.2019 by A. Eirich\n  - added StoreAndForward UpLink\n  - choose local or UTC timestamp\n  - added easy to use \"set Monitor Data\"\n  - changed to Charlie Format by default.\n  - validated with NodeRed V0.19.5 and node-red-contrib-modbus V4.0.0\nV1.2 \n    - validated with NodeRed V0.17.5 & V0.18.7 & V0.19.3 and node-red-contrib-modbus V2.3.2 & V3.6.1 & V4.0.0","x":340,"y":60,"wires":[]},{"id":"dcbbe47f.af2518","type":"comment","z":"1e867eb9.dd0781","name":"Manual: double-click to see the manual","info":"Congratulations, you added the flow successfully!\n\nFollow the steps to configure your flow:\n    1. open node \"ModbusTCP Request\" and set up your connection\n    2. set the config on your machine in Machine Advisor to Custom, HTTPS, Charlie\n    3. open node \"set Monitor Data\" and copy the CustomHeader2 & Server \n       from your monitor config page and define a prefix.\n    4. Enter your proxy server if needed in the node \"set Monitor Data\".\n    5. Deploy all the changes check if the showStatus node show \"Connected\".\n    6. If yes, check new values in Machine Advisor. If not search for the bug.\n    \nTipps:\n    - You can change the read interval in the inject node \"timestamp\".\n    - Delete the Buffer with inject node \"delete Buffer\" in case you had wrong monitor configuration.","x":190,"y":260,"wires":[]},{"id":"b98ec7eb.292ae8","type":"comment","z":"1e867eb9.dd0781","name":"For Tango Format: double click for more Info","info":"In case you need to have Tango format in your machine,\nreplace the node \"Create Charlie Format\" with the node \"Create Tango Format\" like it is in the chain.","x":210,"y":300,"wires":[]},{"id":"94642de3.0e155","type":"debug","z":"1e867eb9.dd0781","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1150,"y":180,"wires":[]},{"id":"9421ef74.02056","type":"function","z":"1e867eb9.dd0781","name":"showStatus","func":"if(msg.status.text.startsWith(\"Connected\")){\n    node.status({fill:\"green\",shape:\"dot\",text:msg.status.text});\n} else if(msg.status.text.startsWith(\"Buffer Size\")){\n    node.status({fill:\"blue\",shape:\"ring\",text:msg.status.text});\n} else {\n    node.status({fill:\"red\",shape:\"dot\",text:msg.status.text});\n}\n\nreturn;","outputs":0,"noerr":0,"x":1170,"y":220,"wires":[]},{"id":"d3f735a7.91f728","type":"inject","z":"1e867eb9.dd0781","name":"delete Buffer","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":"","x":110,"y":200,"wires":[["bb4d79f9.7bb468"]]},{"id":"bb4d79f9.7bb468","type":"change","z":"1e867eb9.dd0781","name":"delete Buffer","rules":[{"t":"set","p":"deleteBuffer","pt":"msg","to":"1","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":170,"y":160,"wires":[["23eb35df.6d987a"]]},{"id":"751dbcee.a9e504","type":"subflow:e6c191f0.3ba34","z":"1e867eb9.dd0781","name":"","x":930,"y":200,"wires":[["94642de3.0e155"],["9421ef74.02056"]]},{"id":"754abc6f.655874","type":"function","z":"1e867eb9.dd0781","name":"Create Charlie Format","func":"var inObject = msg.payload;\nvar keys = Object.keys(inObject);\nvar values = Object.values(inObject);\n\nobjectData = {};\nobjectData['assetName'] = 'Sanwa IPC'\n\nvar inObjectB = inObject;\n\nfor(var k in inObject){\n    objectData[k] = inObject[k];\n    objectData[k + '_timestamp'] = msg.timestampEpoc;\n}\n\nmsg.payload = {\n        \"metrics\": objectData\n};\n\nreturn msg","outputs":1,"noerr":0,"x":600,"y":200,"wires":[["751dbcee.a9e504","71f245c8.23164c"]]},{"id":"7aeb24c3.214b1c","type":"change","z":"1e867eb9.dd0781","name":"set Monitor Data","rules":[{"t":"set","p":"prefix","pt":"msg","to":"Modbus","tot":"str"},{"t":"set","p":"CustomHeader2","pt":"msg","to":"Authorization;SharedAccessSignature sr=cnm-ih-na.azure-devices.net%2Furn%3Adev%3Aops%3A000000-EMA-prod-9e27ba311931db885de7711e&sig=EuqVEbJFbuP%2FSmH3POAV2NPLRmBV9raXTVKtrrrw3Jk%3D&se=1613718838","tot":"str"},{"t":"set","p":"Server","pt":"msg","to":"https://cnm-ih-na.azure-devices.net/devices/urn%3Adev%3Aops%3A000000-EMA-prod-9e27ba311931db885de7711e/messages/events?api-version=2016-11-14","tot":"str"},{"t":"set","p":"proxy","pt":"msg","to":"http://gateway.zscaler.net:80","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":500,"y":100,"wires":[["1d72e5f5.3abd5a"]]},{"id":"1d72e5f5.3abd5a","type":"function","z":"1e867eb9.dd0781","name":"SQL query","func":"msg.payload = {\n    \"temp\":123,\n    \"press\":456,\n    \"speed\":789,\n    \"level\":1011\n}\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":100,"wires":[["754abc6f.655874"]]},{"id":"71f245c8.23164c","type":"debug","z":"1e867eb9.dd0781","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":870,"y":60,"wires":[]},{"id":"627dc337.ee45cc","type":"debug","z":"1e867eb9.dd0781","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":780,"y":280,"wires":[]}]